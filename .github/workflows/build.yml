name: Build

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]

env:
  PLATFORMS: linux/amd64,linux/arm64
  IMAGE_PREFIX: ghcr.io/webmeshproj/vdi

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
      id-token: "write"
      packages: "write"
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        container:
          - app
          - kvdi-proxy
          - manager
        include:
          - container: app
            tag-suffix: app
            name: Build App Image
          - container: kvdi-proxy
            tag-suffix: proxy
            name: Build KVDI Proxy Image
          - container: manager
            tag-suffix: manager
            name: Build Manager Image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get image version
        shell: bash
        run: |
          echo ::set-output name=tag::$([[ "${GITHUB_REF##*/}" == "main" ]] && echo latest || echo ${GITHUB_REF##*/})
        id: version

      - name: Login to GHCR
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Setup Cosign
        uses: sigstore/cosign-installer@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Base Image
        uses: docker/build-push-action@v5
        id: docker-build-base
        with:
          context: .
          file: build/Dockerfile.base
          push: false
          tags: ghcr.io/webmeshproj/vdi-base:${{ steps.version.outputs.tag }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=registry,ref=ghcr.io/webmeshproj/vdi-base:${{ steps.version.outputs.tag }}
          cache-to: type=inline

      - name: ${{ matrix.name }}
        uses: docker/build-push-action@v5
        id: docker-build
        env:
          LDFLAGS: -s -w -X github.com/kvdi/kvdi/pkg/version.Version=${{ steps.version.outputs.tag }} -X github.com/kvdi/kvdi/pkg/version.GitCommit=${{ github.sha }}
        with:
          context: .
          file: build/Dockerfile.${{ matrix.container }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_PREFIX }}-${{ matrix.tag-suffix }}:${{ steps.version.outputs.tag }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=registry,ref=${{ env.IMAGE_PREFIX }}-${{ matrix.tag-suffix }}:${{ steps.version.outputs.tag }}
          cache-to: type=inline
          build-args: |
            LDFLAGS=${{ env.LDFLAGS }}
            BASE_IMAGE=ghcr.io/webmeshproj/vdi-base:${{ steps.version.outputs.tag }}
